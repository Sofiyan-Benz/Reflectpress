{"version":3,"sources":["ScreenHome.js","Nav.js","ScreenArticlesBySource.js","ScreenMyArticles.js","ScreenSource.js","App.js","reducers/articles.js","reducers/token.js","reducers/selectedLang.js","serviceWorker.js","index.js"],"names":["connect","dispatch","addToken","token","type","props","useState","signUpUsername","setSignUpUsername","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","userExists","setUserExists","listErrorsSignin","setListErrorsSignin","listErrorsSignup","setListErrorsSignup","signInEmail","setSignInEmail","signInPassword","setSignInPassword","handleSubmitSignup","a","fetch","method","headers","body","data","json","result","error","handleSubmitSignin","console","log","to","tabErrorsSignin","map","i","tabErrorsSignup","className","onChange","e","target","value","placeholder","Password","onClick","style","width","Nav","textAlign","mode","theme","Item","key","Meta","Card","state","selectedLang","addToWishList","article","articleLiked","articleList","setArticleList","visible","setVisible","title","setTitle","setContent","useEffect","match","params","id","articles","findArticles","handleOk","handleCancel","saveArticle","content","description","urlToImage","display","justifyContent","margin","flexDirection","cover","alt","src","actions","showModal","onOk","onCancel","myArticles","wishList","deleteToWishList","articleTitle","saveArticles","langFiltre","setLangFiltre","dataWishlist","findArticlesWishList","noArticles","deleteArticle","filterLang","lang","marginTop","alignItems","cursor","changeLang","sourceList","setSourceList","setSelectedLang","reqFind","resultFind","findLang","langue","country","sources","APIResultsLoading","updateLang","styleBorderFr","border","styleBorderEn","itemLayout","dataSource","renderItem","source","avatar","category","name","store","createStore","combineReducers","action","wishListCopy","findArticle","length","push","position","splice","App","component","ScreenHome","path","exact","ScreenSource","ScreenArticlesBySource","ScreenMyArticles","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8987cc8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nfunction ScreenHome(props) {\n  const [signUpUsername, setSignUpUsername] = useState(\"\");\n  const [signUpEmail, setSignUpEmail] = useState(\"\");\n  const [signUpPassword, setSignUpPassword] = useState(\"\");\n  const [userExists, setUserExists] = useState(false);\n  const [listErrorsSignin, setListErrorsSignin] = useState([])\n  const [listErrorsSignup, setListErrorsSignup] = useState([])\n//sign -in\nconst [signInEmail, setSignInEmail] = useState(\"\");\n  const [signInPassword, setSignInPassword] = useState(\"\");\n\n//button Submit signup\n  const handleSubmitSignup = async () => {\n    const data = await fetch('/sign-up', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `usernameFromFront=${signUpUsername}&emailFromFront=${signUpEmail}&passwordFromFront=${signUpPassword}`,\n    });\n\n    const body = await data.json()\n    if(body.result == true) {\n      setUserExists(true);\n      props.addToken(body.token)\n    } else {\n      setListErrorsSignup(body.error)\n    }\n\n  }\n\n//button submit signin\nconst handleSubmitSignin =  async () => {\n  const data = await fetch('/sign-in', {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    body: `emailFromFront=${signInEmail}&passwordFromFront=${signInPassword}`,\n  });\n  const body = await data.json()\n   if(body.result == true) {\n      setUserExists(true);\n      props.addToken(body.token)\n}else{\n  setListErrorsSignin(body.error)\n}\n}\n// success connection\nconsole.log('userExists', userExists);\nif (userExists) {\n  return <Redirect to='/screensource' />;\n}\n\nvar tabErrorsSignin = listErrorsSignin.map((error, i) => {\n  return (<p>{error}</p>)\n})\nvar tabErrorsSignup = listErrorsSignup.map((error, i) => {\n  return (<p>{error}</p>)\n})\n\n  return (\n    <div className=\"Login-page\">\n      {/* SIGN-IN */}\n\n      <div className=\"Sign\">\n\n        <Input  onChange={(e) => setSignInEmail(e.target.value)} className=\"Login-input\" placeholder=\"email\" />\n\n        <Input.Password onChange={(e) => setSignInPassword(e.target.value)}  className=\"Login-input\" placeholder=\"password\" />\n\n        {tabErrorsSignin}\n\n        <Button\n          onClick={()=> handleSubmitSignin()}\n          style={{ width: \"80px\" }}\n          type=\"primary\"\n        >\n          Sign-in\n        </Button>\n      </div>\n\n      {/* SIGN-UP */}\n\n      <div className=\"Sign\">\n        <Input\n          onChange={(e) => setSignUpUsername(e.target.value)}\n          className=\"Login-input\"\n          placeholder=\"username\"\n        />\n\n        <Input\n          onChange={(e) => setSignUpEmail(e.target.value)}\n          className=\"Login-input\"\n          placeholder=\"email\"\n        />\n\n        <Input.Password\n          onChange={(e) => setSignUpPassword(e.target.value)}\n          className=\"Login-input\"\n          placeholder=\"password\"\n        />\n          {tabErrorsSignup}\n        <Button\n          onClick={()=> handleSubmitSignup()}\n          style={{ width: \"80px\" }}\n          type=\"primary\"\n        >\n          Sign-Up\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      addToken : function(token) {\n          dispatch({type: 'addToken', token: token})\n      }\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ScreenHome)","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport './App.css';\nimport {Menu, Icon} from 'antd'\n\nfunction Nav() {\n\n  return (\n    <nav >\n      <Menu style={{textAlign: 'center'}} mode=\"horizontal\" theme=\"dark\">\n\n        <Menu.Item key=\"mail\">\n          <Link to=\"/screensource\">\n            <Icon type=\"home\" />\n            Sources\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"test\">\n          <Link to=\"/screenmyarticles\">\n            <Icon type=\"read\" />\n            My Articles\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item key=\"app\">\n          <Link to=\"/\">\n            <Icon type=\"logout\" />\n            Logout\n          </Link>\n        </Menu.Item>\n\n      </Menu>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { Card, Icon, Modal} from 'antd';\nimport Nav from './Nav'\nimport { connect } from 'react-redux';\nconst { Meta } = Card;\n\nfunction ScreenArticlesBySource(props) {\n\n  const [articleList, setArticleList] = useState([])\n\n  const [visible, setVisible] = useState(false)\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n\n  useEffect(() => {\n    const findArticles = async() => {\n      const data = await fetch(`https://newsapi.org/v2/top-headlines?sources=${props.match.params.id}&apiKey=f2c10d9e90574bfa865f68a53e29dcc7`)\n      const body = await data.json()\n      console.log('findArticles',body)\n      setArticleList(body.articles)\n    }\n\n    findArticles()\n  },[])\n\n  var showModal = (title, content) => {\n    setVisible(true)\n    setTitle(title)\n    setContent(content)\n\n  }\n\n  var handleOk = e => {\n    console.log(e)\n    setVisible(false)\n  }\n\n  var handleCancel = e => {\n    console.log(e)\n    setVisible(false)\n  }\n//enregistrer l'article dans la bdd\nvar saveArticle =  async article => {\n  props.addToWishList(article)\n\n  const saveReq = await fetch('/wishlist-article', {\n    method: 'POST',\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n    body: `name=${article.title}&content=${article.content}&desc=${article.description}&lang=${props.selectedLang}&img=${article.urlToImage}&token=${props.token}`\n  })\n}\n\n  return (\n    <div>\n\n            <Nav/>\n\n            <div className=\"Banner\"/>\n\n            <div className=\"Card\">\n              {articleList.map((article,i) => (\n                <div key={i} style={{display:'flex',justifyContent:'center'}}>\n\n                <Card\n\n                  style={{\n                  width: 300,\n                  margin:'15px',\n                  display:'flex',\n                  flexDirection: 'column',\n                  justifyContent:'space-between' }}\n                  cover={\n                  <img\n                      alt=\"example\"\n                      src={article.urlToImage}\n                  />\n                  }\n                  actions={[\n                      <Icon type=\"read\" key=\"ellipsis2\" onClick={() => showModal(article.title, article.content)} />,\n                      <Icon type=\"like\" key=\"ellipsis\" onClick={() => saveArticle(article)} />\n                  ]}\n                  >\n\n                  <Meta\n                    title={article.title}\n                    description={article.description}\n                  />\n\n                </Card>\n                <Modal\n                  title={title}\n                  visible={visible}\n                  onOk={handleOk}\n                  onCancel={handleCancel}\n                >\n                  <p>{title}</p>\n                </Modal>\n\n              </div>\n\n              ))}\n\n\n\n\n\n           </div>\n\n\n\n      </div>\n  );\n}\n\nfunction mapDispatchTopProps(dispatch){\n  return {\n    addToWishList: function(article){\n      dispatch({type: 'addArticle',\n      articleLiked: article\n  })\n    }\n  }\n}\n\nfunction mapStateToProps(state){\n  return {token: state.token, selectedLang: state.selectedLang}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(ScreenArticlesBySource)\n\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Card, Icon, Modal } from \"antd\";\nimport Nav from \"./Nav\";\n\nimport { connect } from \"react-redux\";\n\nconst { Meta } = Card;\n\nfunction ScreenMyArticles(props) {\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [langFiltre, setLangFiltre] = useState(\"\");\n\n  useEffect(() => {\n    const findArticlesWishList = async () => {\n      const dataWishlist = await fetch(`/wishlist-article?lang=${langFiltre}&token=${props.token}`)\n      const body = await dataWishlist.json();\n      console.log(\"boooody => \", body);\n      props.saveArticles(body.articles);\n    }\n\n    findArticlesWishList();\n  }, [langFiltre]);\n  //supprimer un article\n  var deleteArticle = async (title) => {\n    props.deleteToWishList(title);\n\n    const deleteReq = await fetch(\"/wishlist-article\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `title=${title}&token=${props.token}`,\n    });\n  };\n\n  var filterLang = (lang) => {\n    setLangFiltre(lang);\n  };\n\n  var showModal = (title, content) => {\n    setVisible(true);\n    setTitle(title);\n    setContent(content);\n  };\n\n  var handleOk = (e) => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  var handleCancel = (e) => {\n    console.log(e);\n    setVisible(false);\n  };\n\n  var noArticles;\n  if (props.myArticles == 0) {\n    noArticles = (\n      <div style={{ marginTop: \"30px\", textAlign: \"center\" }}>\n        <h1> Vous n'avez pas d'articles </h1>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Nav />\n\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n        className=\"Banner\"\n      >\n        <img\n          style={{ width: \"40px\", margin: \"10px\", cursor: \"pointer\" }}\n          src=\"/images/fr.svg\"\n          onClick={() => filterLang(\"fr\")}\n        />\n        <img\n          style={{ width: \"40px\", margin: \"10px\", cursor: \"pointer\" }}\n          src=\"/images/en.svg\"\n          onClick={() => filterLang(\"en\")}\n        />\n      </div>\n\n      {noArticles}\n\n      <div className=\"Card\">\n        {props.myArticles.map((article, i) => (\n          <div key={i} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Card\n              style={{\n                width: 300,\n                margin: \"15px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n              }}\n              cover={<img alt=\"example\" src={article.urlToImage} />}\n              actions={[\n                <Icon\n                  type=\"read\"\n                  key=\"ellipsis2\"\n                  onClick={() => showModal(article.title, article.content)}\n                />,\n                <Icon\n                  type=\"delete\"\n                  key=\"ellipsis\"\n                  onClick={() => deleteArticle(article.title)}\n                />,\n              ]}\n            >\n              <Meta title={article.title} description={article.description} />\n            </Card>\n            <Modal\n              title={title}\n              visible={visible}\n              onOk={handleOk}\n              onCancel={handleCancel}\n            >\n              <p>{title}</p>\n            </Modal>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { myArticles: state.wishList, token: state.token };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    deleteToWishList: function (articleTitle) {\n      dispatch({ type: \"deleteArticle\", title: articleTitle });\n    },\n    saveArticles: function (articles) {\n      dispatch({ type: \"saveArticles\", articles: articles });\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenMyArticles);\n","import React,{useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport './App.css';\nimport { List, Avatar} from 'antd';\nimport Nav from './Nav'\nimport { connect } from 'react-redux'\n\nfunction ScreenSource(props) {\n\n  const [sourceList, setSourceList] = useState([])\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang) //le choix de l'utilisateur dans les etat de redux\n\n\n  useEffect(() => {\n    const findLang = async () => {\n\n      const reqFind = await fetch(`/user-lang?token=${props.token}`)\n      const resultFind = await reqFind.json()\n      setSelectedLang(resultFind.lang)\n\n    }\n\n\n\n    findLang()\n  }, [])\n\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      var langue = 'fr'\n      var country = 'fr'\n        if (selectedLang == 'en') {\n           var langue = 'en'\n          var  country = 'us'\n\n        }\n        props.changeLang(selectedLang) // en retournant en arriere l'utilisateur garde tjrs sa langue preferé\n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=f2c10d9e90574bfa865f68a53e29dcc7`)\n      const body = await data.json()\n      console.log('body sources =====>', body);\n      setSourceList(body.sources)\n\n    }\n\n\n\n    APIResultsLoading()\n  }, [selectedLang])\n\n  var updateLang = async (lang) =>{\n    setSelectedLang(lang)\n\n    const reqLang = await fetch('/user-lang', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      body: `lang=${lang}&token=${props.token}`\n    })\n  }\n\n  var styleBorderFr = {width: '40px', margin: '10px', cursor:'pointer'}\n  if(selectedLang == 'fr') {\n     styleBorderFr.border = \"1px solid black\"\n  }\n  var styleBorderEn = {width: '40px', margin: '10px', cursor:'pointer'}\n  if(selectedLang == 'en') {\n    styleBorderEn.border = \"1px solid black\"\n  }\n  return (\n    <div>\n        <Nav/>\n\n       <div style={{display: 'flex', justifyContent:'center', alignItems: 'center'}} className=\"Banner\">\n       <img style={styleBorderFr} src='/images/fr.svg' onClick={() => updateLang('fr')} />\n       <img style={styleBorderEn} src='/images/en.svg' onClick={() => updateLang('en')} />\n      </div>\n       <div className=\"HomeThemes\">\n\n              <List\n                  itemLayout=\"horizontal\"\n                  dataSource={sourceList}\n                  renderItem={source => (\n                    <List.Item>\n                      <List.Item.Meta\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\n                        description={source.description}\n                      />\n                    </List.Item>\n                  )}\n                />\n\n\n          </div>\n\n      </div>\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  return {selectedLang: state.selectedLang, token: state.token }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeLang: function(selectedLang) {\n      dispatch({type: 'changeLang', selectedLang: selectedLang })\n    }\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ScreenSource)","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport './App.css';\n\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers } from 'redux'\n\nimport wishList from './reducers/articles'\nimport token from './reducers/token'\nimport selectedLang from './reducers/selectedLang'\nimport ScreenHome from './ScreenHome';\nimport ScreenArticlesBySource from './ScreenArticlesBySource'\nimport ScreenMyArticles from './ScreenMyArticles'\nimport ScreenSource from './ScreenSource'\n\nconst store = createStore(combineReducers({wishList, token, selectedLang }))\n\nfunction App() {\n  return (\n    <Provider store={store} >\n\n    <Router>\n      <Switch>\n        <Route component={ScreenHome} path=\"/\" exact />\n        <Route component={ScreenSource} path=\"/screensource\" exact />\n        <Route component={ScreenArticlesBySource} path=\"/screenarticlesbysource/:id\" exact />\n        <Route component={ScreenMyArticles} path=\"/screenmyarticles\" exact />\n      </Switch>\n    </Router>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","export default function(wishList = [], action){\n\n\n    if(action.type == 'saveArticles') {\n            return action.articles\n    } else if(action.type == 'addArticle') {\n        var wishListCopy = [...wishList]\n\n        var findArticle = false\n\n        for (let i = 0; i < wishListCopy.length; i++) {\n            if (wishListCopy[i].title == action.articleLiked.title ) {\n                findArticle = true\n            }\n        }\n        //si l'article a deja été liké\n        if (!findArticle) {\n            wishListCopy.push(action.articleLiked)\n        }\n\n        return wishListCopy\n    } else if (action.type == 'deleteArticle') {\n        var wishListCopy = [...wishList]\n        var position = null\n        for (let i = 0; i < wishListCopy.length; i++) {\n            if (wishListCopy[i].title == action.title) {\n                position = i\n            }\n        }\n        if (position != null) {\n            wishListCopy.splice(position, 1)\n        }\n        return wishListCopy\n    }  else {\n        return wishList\n    }\n}","export default function(token = '', action) {\n    if (action.type == 'addToken') {\n        return action.token\n    }else {\n        return token\n    }\n}","export default function(selectedLang = null, action) {\n    if (action.type == 'changeLang') {\n        return action.selectedLang\n\n    } else {\n        return selectedLang\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}